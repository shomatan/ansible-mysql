---
# install
- name: Add repository file
  template:
    src: MariaDB.repo.j2
    dest: /etc/yum.repos.d/mariadb.repo
    owner: root
    group: root
    mode: 00644

- name: Ensure mysql packages are installed.
  yum:
    name: "{{ item }}"
    state: latest
    enablerepo: "{{ mysql_enablerepo }}"
  with_items: "{{ mysql_packages }}"
  notify: restart mysql

# configure
- name: Place mysql configuration file in place.
  template:
    src: my.cnf.j2
    dest: /etc/my.cnf
    owner: root
    group: root
    mode: 00644
  notify: restart mysql

- name: Create log dir if it does not exist
  file:
    path: "{{ mysql_log_dir }}"
    state: directory
    owner: mysql
    group: mysql
    mode:  00755

- name: Create slow query log file.
  shell: "touch {{ mysql_slow_query_log_file }} creates={{ mysql_slow_query_log_file }}"

- name: Set ownership on slow query log file.
  file:
    path: "{{ mysql_slow_query_log_file }}"
    state: file
    owner: mysql
    group: mysql
    mode: 00640

- name: Create error log file.
  shell: "touch {{ mysql_log_error }} creates={{ mysql_log_error }}"

- name: Set ownership on error log file.
  file:
    path: "{{ mysql_log_error }}"
    state: file
    owner: mysql
    group: mysql
    mode: 00640

# service
- name: Ensure mysql is started and enabled to start at boot.
  service: name=mysql state=started enabled=yes

# secure installation
- name: Get MySQL version.
  command: 'mysql --version'
  register: mysql_cli_version
  changed_when: false

- name: Disallow root login remotely
  command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false

- name: Get list of hosts for the root user.
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = "root" ORDER BY (Host="localhost") ASC'
  register: mysql_root_hosts
  changed_when: false
  always_run: true

- name: Set root Password
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }} state=present
  with_items: "{{ mysql_root_hosts.stdout_lines }}"

# Has to be after the root password assignment, for idempotency.
- name: Copy .my.cnf file with root password credentials.
  template:
    src: "user-my.cnf.j2"
    dest: "{{ mysql_user_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600

- name: Get list of hosts for the anonymous user.
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = ""'
  register: mysql_anonymous_hosts
  changed_when: false
  always_run: true

- name: Remove anonymous MySQL users.
  mysql_user:
     name: ""
     host: "{{ item }}"
     state: absent
  with_items: "{{ mysql_anonymous_hosts.stdout_lines }}"

- name: Remove MySQL test database.
  mysql_db: "name='test' state=absent"

# configure backup task.
- name: Create backup group.
  group: name=backup

- name: Create backup user.
  user: name=backup group=backup createhome=yes shell=/sbin/nologin

- name: Place mysql backup script in place.
  template:
    src: backup-mysql.sh.j2
    dest: /usr/local/bin/backup-mysql.sh
    owner: root
    group: root
    mode: 00750

- name: Creates dairy mysql backup cronjob.
  cron:
    name: "Backup mysql tables (dairy schedule)"
    user: root
    minute: "00"
    hour: "5"
    job: "sh /usr/local/bin/backup-mysql.sh"
    cron_file: mysql-backup
